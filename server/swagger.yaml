openapi: 3.0.0
info:
  title: Orus
  description: You can obtain JWT token from login API
  version: 0.1
servers:
  - url: http://localhost:3000/api
    description: Local server for testing
paths:
  /login:
    post:
      summary: Login API
      security: []   # No security
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example:   # Sample object
                username: admin
                password: 62f264d7ad826f02a8af714c0a54b197935b717656b80461686d450f7b3abde4c553541515de2052b9af70f710f0cd8a1a2d3f4d60aa72608d71a63a9a93c0f5
      responses:
        '200':
          description: OK
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /verifyToken:
    post:
      summary: Verify token API
      security: [] #No security
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /changePassword:
    post:
      summary: Change password API
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordNew:
                  type: string
                passwordOld:
                  type: string
      responses:
        '200':
          description: OK
                

  #-----  Taxpayerinfo  -----
  /taxpayerinfo/:
    post:
      summary: CRUD ACTION create
      tags:
        - Taxpayerinfo
      parameters:
        - name: obj
          in: path
          description: Object to insert
          required: true
          schema:
            type: Taxpayerinfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Taxpayerinfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BIRFormNumber:
                  type: number
                BirthDateOrgDate:
                  type: integer
                BirthPlace:
                  type: string
                Citizenship:
                  type: string
                CivilStatus:
                  type: boolean
                DateOfArrivalInPhilippines:
                  type: integer
                EmailAddress:
                  type: string
                FathersName:
                  type: string
                FaxNo:
                  type: number
                FirstName:
                  type: string
                Gender:
                  type: boolean
                IDEffectiveDate:
                  type: integer
                IDExpiryDate:
                  type: integer
                IDIssuer:
                  type: string
                IDNo:
                  type: number
                IDType:
                  type: boolean
                IssuePlaceCountry:
                  type: string
                LandlineNo:
                  type: number
                LastName:
                  type: string
                MiddleName:
                  type: string
                MobileNo:
                  type: number
                MothersMaidenName:
                  type: string
                NickName:
                  type: string
                PrefferedContactType:
                  type: boolean
                RegisteredName:
                  type: string
                Suffix:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - Taxpayerinfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Taxpayerinfo"
    
  /taxpayerinfo/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - Taxpayerinfo
      parameters:
        - name: id
          in: path
          description: Id Taxpayerinfo
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - Taxpayerinfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Taxpayerinfo"
    post:
      summary: CRUD ACTION update
      tags:
        - Taxpayerinfo
      parameters:
        - name: id
          in: path
          description: Id Taxpayerinfo
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Taxpayerinfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Taxpayerinfo"
    post:
      summary: CRUD ACTION update
      tags:
        - Taxpayerinfo
      parameters:
        - name: id
          in: path
          description: Id Taxpayerinfo
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Taxpayerinfo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Taxpayerinfo"
    
  #-----  User  -----
  /user/{id}/changePassword:
    post:
      summary: Change password of user from admin
      tags:
        - User
      responses:
        "200":
          description: OK
    
  /user/:
    post:
      summary: CRUD ACTION create
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                name:
                  type: string
                password:
                  type: string
                roles:
                  type: string
                surname:
                  type: string
                username:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    
  /user/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    post:
      summary: CRUD ACTION update
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
    
    
  #-----  User  -----
  /Users/{id}/changePassword:
    post:
      summary: Change password by admin API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordNew:
                  type: string
                passwordAdmin:
                  type: string
      responses:
        '200':
          description: OK
  /Users/{id}:
    post:
      summary: Update User API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
    delete:
      summary: Delete User API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /Users:
    post:
      summary: Create User API
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: 'string'
                password: 
                  type: 'string'
                mail: 
                  type: 'string'
                name: 
                  type: 'string'
                surname: 
                  type: 'string'
                roles: 
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    
# JWT security
security:
  - bearerAuth: [] 
  
  
# Components
components:

  # Security
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

  # Data Model
  schemas:
    User:
      properties:
        username:
          type: 'string'
        password: 
          type: 'string'
        mail: 
          type: 'string'
        name: 
          type: 'string'
        surname: 
          type: 'string'
        roles: 
          type: array
          items:
            type: string
      required:
        - username
        - password
        

    Taxpayerinfo:
      properties:
        _id:
          type: string
        BIRFormNumber:
          type: number
        BirthDateOrgDate:
          type: integer
        BirthPlace:
          type: string
        Citizenship:
          type: string
        CivilStatus:
          type: boolean
        DateOfArrivalInPhilippines:
          type: integer
        EmailAddress:
          type: string
        FathersName:
          type: string
        FaxNo:
          type: number
        FirstName:
          type: string
        Gender:
          type: boolean
        IDEffectiveDate:
          type: integer
        IDExpiryDate:
          type: integer
        IDIssuer:
          type: string
        IDNo:
          type: number
        IDType:
          type: boolean
        IssuePlaceCountry:
          type: string
        LandlineNo:
          type: number
        LastName:
          type: string
        MiddleName:
          type: string
        MobileNo:
          type: number
        MothersMaidenName:
          type: string
        NickName:
          type: string
        PrefferedContactType:
          type: boolean
        RegisteredName:
          type: string
        Suffix:
          type: string
      required:
        -  _id
        - BIRFormNumber
        - BirthDateOrgDate
        - BirthPlace
        - Citizenship
        - CivilStatus
        - EmailAddress
        - FathersName
        - FirstName
        - Gender
        - IDEffectiveDate
        - IDExpiryDate
        - IDIssuer
        - IDNo
        - IDType
        - LandlineNo
        - LastName
        - MobileNo
        - MothersMaidenName
        - PrefferedContactType
      
    
    User:
      properties:
        _id:
          type: string
        mail:
          type: string
        name:
          type: string
        password:
          type: string
        roles:
          type: string
        surname:
          type: string
        username:
          type: string
      required:
        -  _id
        - password
        - username
      
    
